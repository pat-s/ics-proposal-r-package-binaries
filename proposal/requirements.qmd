# Requirements

## General

- Support for continuous development of the code engine
- Cost coverage for the public running service building CRAN packages for various distributions and architectures

## People

Additional people which ensure an upkeep of the public package build service and the underlying servers.

The project can be run by a single person technically, more people would be helpful to improve the project code and robustify the service maintenance.

## Tools & Tech

- For the public CRAN build service, a cloud infrastructure (already existing) which provides native `x86_64` and `arm64` runners that are able to natively build the respective packages.
The servers need decent CPU power to minimize build times and being able to process all existing packages, in scenarios of major OS version updates, in a reasonable time.

- A (professionally) managed database storing the build metadata (already in place).

- S3 storage in the cloud (currently using Hetzner, 1TB/m = 5 EUR).

- UI frontend showing available packages (optional).
  Currently, a self-built Shiny App Dashboard is in use (<https://app.devxy.io/app/r-package-binaries-dashboard>)

![High level architecture diagram](proposal/img/architecture.drawio.svg)

## Funding

There are two main types of funding:

1. General maintenance and improvement of the "engine" and its related documentation
1. Coverage of cloud costs for the running service providing binaries for CRAN packages 

For (1), I do not know if there are hard-coded policies in place for human workforce costs per project/hour. It would surely be great to have financial support for this, but overall, (2) is more important in my opinion.

For (2), I'll outline a cloud cost overview which will be able to efficiently provide the technical resources to run the overall CRAN build service for the forseeable future:

| Name                                             | ~ Cost/month | ~ Costs / year | Notes                                                                                   |
|--------------------------------------------------|----------------------|--------------|----------------------------------------------------------------------------------------|
| `x86_64` Server (8 cores, 16 threads, 64 GB RAM) | 54 Euro              | 648 Euro     | Used to build `x86_64` binaries, bare-metal root server                                |
| x2 `arm64` Server (16 cores, 32 GB RAM)          | 52 Euro              | 624 Euro     | Used to build `arm64` binaries, shared Cloud Server, price for two units               |
| Database Servers (HA)                            | 12 Euro              | 144 Euro     | HA Database for build metadata                                                         |
| S3 storage costs                                 | 15 Euro              | 180 Euro     | Costs for 3 TB, current storage is at 2.14 TB                                          |
| CDN costs                                        | ?? Euro              | ?? Euro      | CDN bandwith/transfer costs. 10$/1 TB bandwith, + local storage zones around the world |

A note on the arm64 servers: while the mentioned ones are (even only one of them) is sufficient for processing the daily workloads, more power is needed for a full rebuild of new major OS versions.
Having a [RX170](https://www.hetzner.com/dedicated-rootserver/matrix-rx/) available, would make all of this a blast.
(Similar conditions apply for the rebuilds of x86 packages.)
It is a question of money in the end, even though the costs are somewhat on the smaller scale, given the many resources which can be processed with it, especially in relation to other common cloud provider costs.

While the core setup costs (servers, S3, database) should stay quite static at ~ 150 / month (1800 / year) (for the minimal setup), the bandwith costs for fast downloads around the world will be dynamic.
If the service is picked up by the community on a large scale, costs of multiple hundreds per month could occur, when with a cost-efficient CDN provider.
One way to limit this is by setting global limits, though as a public service aiming to be the "go-to" destination for binaries, this would be hard to communicate.
In the end, substantial financial support from institutions support the R ecosystem would be needed.
(I'd argue personally that providing a professional and fast package repository is a key interest of each language and every penny spent on it is well invested.)

All in all: cloud cost coverage between 2-3k per year, human work costs of ~15k for this grant period to professionalize the core engine, extend documentation and establish the project.
Seeing this project getting funded would also allow for more concrete planning of onboarding additional people, increasing the human bus-factor.

## Summary

The project would greatly benefit from dedicated resources to support ongoing development of the core engine, as well as to cover ongoing cloud infrastructure costs.

Additionally, increasing the number of individuals with access to the core components of the system would improve resilience, reducing the risk of disruptions due to single points of failure or individual unavailability.